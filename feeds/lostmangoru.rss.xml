<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blog.gorugle.org</title><link>/</link><description></description><atom:link href="/feeds/lostmangoru.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 04 Feb 2015 01:29:00 +0900</lastBuildDate><item><title>2015年ですね</title><link>/posts/2015/02/2015-todo.html</link><description>&lt;p&gt;2015年になってもう1ヶ月経ちますね、みなさまいかがお過ごしでしょうか&lt;/p&gt;
&lt;p&gt;私は年明け自分の実家や妻の実家へ行ったりで慌ただしい感じでした&lt;br /&gt;
そしてそのまま初仕事の日を迎えたわけですが、体調が整わないままずるずるときてしまいました&lt;br /&gt;
だましだまし出勤はしていたのですがちょいちょい体調不良を繰り返していて&lt;br /&gt;
最終的に1月末には寝こむくらいの結構大変な風邪をひいてしまいました&lt;br /&gt;
気がついたら3Kgも痩せてしまいましたが今では一応復活しています&lt;/p&gt;
&lt;p&gt;さて、一応新年の一発目なので、今年どんなことをしたいかとか&lt;br /&gt;
もう1ヶ月経っているので最近はじめたことを書こうかと思います  &lt;/p&gt;
&lt;p&gt;最近会社で筋トレをするグループができていて、誘われたので同僚と毎日2回、簡単な運動をしています&lt;br /&gt;
毎年言っているような気がしますが、今年はもっと体力をつけたいですね、あと英会話の勉強&lt;/p&gt;
&lt;p&gt;去年はArduino等、電子工作に手を出した年だった気がします&lt;br /&gt;
学生時代に勉強したオームの法則とかも懐かしいし、色々新しく知ることも多くて面白いですね&lt;br /&gt;
今年も引き続きなにかできたらいいなと思っています&lt;/p&gt;
&lt;p&gt;あと今年に入ってからは木工にも手を出しています&lt;br /&gt;
これからなにか記事にしてまとめようと思ってはいるのですがまだできていません&lt;br /&gt;
木工も電子工作とは似ているけれどまた違う楽しみがありますね&lt;/p&gt;
&lt;p&gt;あとは本業のソフトウェア&lt;br /&gt;
これはまぁ引き続きという感じで今まで作ったものの改善とか&lt;br /&gt;
途中のままになっているものを完成させるとか&lt;br /&gt;
なにかお金がかからなくて面白そうなことがあればやりたいです&lt;/p&gt;
&lt;p&gt;大雑把にまとめるとこんな感じで、 今のところ考えている具体的なことは&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;運動をする → とりあえず現状でOK?&lt;/li&gt;
&lt;li&gt;英会話の勉強をする → 英会話教室に通う?&lt;/li&gt;
&lt;li&gt;電子工作関係&lt;ul&gt;
&lt;li&gt;去年作った &lt;a href="http://blog.gorugle.org/posts/2014/11/ir.html"&gt;赤外線リモコンのサンプル&lt;/a&gt; をきちんとしたものに仕上げたい&lt;ul&gt;
&lt;li&gt;リモコン以外に温度、湿度、照度等のセンサも試したい&lt;/li&gt;
&lt;li&gt;ケースに入れる&lt;/li&gt;
&lt;li&gt;PCから送信する赤外線の信号を入力できるようにする&lt;/li&gt;
&lt;li&gt;外部から操作できるようにインターフェイスを用意する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;USB機器を複数マシンで切り替えて使える切替器の作成 → 作業中&lt;/li&gt;
&lt;li&gt;&lt;a href="http://laboratory-danger-robo.blogspot.jp/2015/01/blog-post.html"&gt;この時計&lt;/a&gt; がいいなと思ったので似たようなものを作りたい&lt;/li&gt;
&lt;li&gt;Arduinoとしてでなく直接AVRを扱ってみたい&lt;/li&gt;
&lt;li&gt;PICも&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;木工関係&lt;ul&gt;
&lt;li&gt;洗面所の謎の空間に入る棚を作る → 済&lt;/li&gt;
&lt;li&gt;ロールカーテン取り付け用の木の突っ張り棒を作る → 済&lt;/li&gt;
&lt;li&gt;洗濯機の台と一体になった洗濯機置き場周辺の空間が有効利用できるような棚?を作る&lt;/li&gt;
&lt;li&gt;机を作る&lt;ul&gt;
&lt;li&gt;ケーブルを収納できるようにする&lt;/li&gt;
&lt;li&gt;ケーブルの収納を取り外せば普通の机、テーブルとして使える設計にする&lt;/li&gt;
&lt;li&gt;モニタアームを取り付ける空間を予め考慮する&lt;/li&gt;
&lt;li&gt;引っ越しを考慮して足を取り外せるようにする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PC、サーバを置く棚を作る&lt;ul&gt;
&lt;li&gt;机と並べるので似たデザインにする&lt;/li&gt;
&lt;li&gt;同じ高さにして天板がフラットになるようにする&lt;/li&gt;
&lt;li&gt;別の用途に転用できるように特殊な形にしない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ソフトウェア関係&lt;ul&gt;
&lt;li&gt;MQTTを送受信できるプログラムを作る → &lt;a href="https://github.com/lostman-github/mqttcd"&gt;ここで作業中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hitoriblog.com/?p=23782"&gt;CloudFlash&lt;/a&gt; を持っているのでこれでなにか面白いことをする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;とりあえず思いつくことはこんな感じ、他にも思いついたら加筆修正する予定&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Wed, 04 Feb 2015 01:29:00 +0900</pubDate><guid>tag:,2015-02-04:posts/2015/02/2015-todo.html</guid><category>Diary</category><category>ToDo</category></item><item><title>新しいサーバ用マシン買いました</title><link>/posts/2014/12/j1900.html</link><description>&lt;p&gt;実はもう1ヶ月くらい前の話なんだけれど、安定して動作しているので記事にしてみる&lt;br /&gt;
今までの環境はHPのMicroServer1台で&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;録画&lt;/li&gt;
&lt;li&gt;NFS、Sambaでのファイル共有&lt;/li&gt;
&lt;li&gt;PPPoEで有線のルータ&lt;/li&gt;
&lt;li&gt;無線のアクセスポイント&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等のサービスを提供していた&lt;br /&gt;
騒音の面もあってこのマシンはリビングから遠くに位置していて、リビングからは無線の電波がいまいちな状態になっていた&lt;br /&gt;
遅いだけなら我慢もできたんだけれど、位置によっては切断されたりもするのでアクセスポイントの位置をリビングに移動したかった&lt;br /&gt;
ただMicroServerはそれなりにHDDの音がするので移動するわけにはいかず…&lt;br /&gt;
普通の無線ルータを購入してもよかったのだけれどいろいろ考えた末、他の機能もこっちに分離するために自作することにした&lt;br /&gt;
購入したのは以下のパーツ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gigabyte.jp/products/product-page.aspx?pid=4918#ov"&gt;GIGABYTE GA-J1900N-D3V&lt;/a&gt; 11010円 (10%ポイント)&lt;br /&gt;
Celeron J1900 (4 Core, 4 Thread)、Realtek GbEx2&lt;br /&gt;
ファンレスでNICが2つ付いているのがこれくらいしかなかったので必然的に&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.co.jp/dp/B00AA7SRDA"&gt;SanMax SMD-N8GNP-13H-D&lt;/a&gt; 9561円&lt;br /&gt;
SO-DIMM DDR3-1333 4GBx2 ELPIDAチップ&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.links.co.jp/item/isk-110-vesa/"&gt;ANTEC ISK-110 VESA&lt;/a&gt; 9590円 (10%ポイント)&lt;br /&gt;
小さくてACアダプタだったので&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;届いた箱たち&lt;br /&gt;
&lt;a href="/static/images/2014/12/IMAG1204.jpg"&gt;&lt;img alt="box" src="/static/images/2014/12/IMAG1204_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;仮組みしてMemtest中&lt;br /&gt;
&lt;a href="/static/images/2014/12/IMAG1205.jpg"&gt;&lt;img alt="memtest" src="/static/images/2014/12/IMAG1205_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最終的にはこんな感じ&lt;br /&gt;
見えないけれど裏側に余ってたSSDが装着されている
&lt;a href="/static/images/2014/12/IMAG1211.jpg"&gt;&lt;img alt="assembled" src="/static/images/2014/12/IMAG1211_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今はテレビ台の中に設置されている、それなりに発熱するしテレビ台は扉が閉まるタイプで&lt;br /&gt;
熱がこもりやすいのでもしかしたら夏場はファンレスで運用するのは辛いかもしれない&lt;br /&gt;
ただ4スレッドだからかメモリを多く積んでいるからかMicroServerより随分快適な印象&lt;br /&gt;
このマシンには有線ルータと無線のアクセスポイント、それ以外にも一部のサービスを分担してもらっている&lt;br /&gt;
それらはいつも通りGentooをインストールして運用しているんだけれど、それはまた次の話&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Fri, 05 Dec 2014 00:53:00 +0900</pubDate><guid>tag:,2014-12-05:posts/2014/12/j1900.html</guid><category>Hardware</category></item><item><title>Arduinoをリモコンにしてみる</title><link>/posts/2014/11/ir.html</link><description>&lt;p&gt;秋月電子で赤外線の受信モジュールとLEDを購入して学習リモコン的なものを作ってみた&lt;br /&gt;
今回使用したのは以下の部品&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Arduino Uno&lt;/li&gt;
&lt;li&gt;赤外線リモコン受信モジュール &lt;a href="http://akizukidenshi.com/catalog/g/gI-06487/"&gt;GP1UXC41QS&lt;/a&gt; x1 1個50円&lt;/li&gt;
&lt;li&gt;5mm赤外線LED &lt;a href="http://akizukidenshi.com/catalog/g/gI-04311/"&gt;OSI5LA5113A&lt;/a&gt; x3 10個100円&lt;/li&gt;
&lt;li&gt;タクトスイッチ &lt;a href="http://akizukidenshi.com/catalog/g/gP-03647/"&gt;DTS-6&lt;/a&gt; x1 1個10円&lt;/li&gt;
&lt;li&gt;プルダウン用の抵抗1KΩ x1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それぞれを以下のように接続した&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Arduino&lt;/th&gt;
&lt;th&gt;部品&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;GP1UXC41QSのVout&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;GP1UXC41QSのGND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;td&gt;GP1UXC41QSのVcc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;td&gt;タクトスイッチの2番&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;タクトスイッチの4番 (プルダウン抵抗をつける)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;OSI5LA5113A x3 の+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;OSI5LA5113A x3 の-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;GP1UXC41QSのデータシートの &lt;code&gt;6. 製品の実装について&lt;/code&gt; の項に &lt;code&gt;CRフィルターを実装してください&lt;/code&gt; とあるけれど&lt;br /&gt;
お試しなので今回は省略して回路を組んだ&lt;br /&gt;
手元の環境では特に問題は起きていないけれど誤動作する可能性があるので注意&lt;/p&gt;
&lt;p&gt;実際に接続するとこのようになる&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/11/IMAG1268.jpg"&gt;&lt;img alt="image" src="/static/images/2014/11/IMAG1268_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ソースコードは &lt;a href="https://github.com/lostman-github/arduino/blob/master/Uno/IR/sample/sample.ino"&gt;Github&lt;/a&gt; に置いてある&lt;/p&gt;
&lt;p&gt;書き込んでシリアルモニタを表示すると &lt;code&gt;.&lt;/code&gt; が1秒毎に表示される、これは受信状態であることを表している&lt;br /&gt;
この状態で本物のリモコンをセンサに向けてボタンを押すと読み込んだ結果を出力する&lt;/p&gt;
&lt;p&gt;ここで出力される情報は他の色々なサイトで見ることができるサンプルと同様に&lt;br /&gt;
センサの出力の値が切り替わるまでの時間を10µs単位で計測したもの&lt;br /&gt;
&lt;code&gt;4384,1032,510,67,....&lt;/code&gt; と出力されたら、先頭から43840µsのOFF、10320µsのON、5100µsのOFF、670µsのONを表している&lt;br /&gt;
先頭のOFFは無通信時間で不要な情報なので、これを除外してソースに埋め込めばこのデータを使ってLEDを発光させることができる&lt;/p&gt;
&lt;p&gt;タクトスイッチを押すと &lt;code&gt;Send&lt;/code&gt; が表示されソースコードに埋め込まれている情報を元にLEDを発光させる&lt;/p&gt;
&lt;p&gt;実行例&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;.
.
.4384,1032,510,67,62,67,62,66,187,67,61,70,62,66,61,67,62,67,187,69,188,66,62,66,61,67,62,69,187,67,61,66,187,67,61,70,61,66,187,67,62,66,188,70,187,66,62,66,62,66,187,69,188,66,61,66,188,66,61,70,62,66,188,66,187,66,62,66,
.
.
.
.
.
Send
.
.
.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ソースに関しては他のサイトを参考にして簡潔になるように書きなおした程度で&lt;br /&gt;
細かい説明は説明は不要だと思われるけれど、1点ハマったポイントがあったので経緯をメモしておく&lt;/p&gt;
&lt;p&gt;作成にあたってソースコードは初めからほぼ最終形に近い形になっていて、受信に関しては期待通り動作していた&lt;br /&gt;
ただ送信が全く動かなくて原因もよくわからない状態だった&lt;/p&gt;
&lt;p&gt;赤外線は携帯のカメラを使うと見ることができるので、それでLEDが発光していることは確認した&lt;br /&gt;
とりあえず光っていることは確認できたので受信側が認識するために必要な38KHzが&lt;br /&gt;
うまく作り出せていないのかと思ってオシロで確認する以外に何か方法がないか考えてみた&lt;br /&gt;
よくよく考えたら単純に自分で送信したものを今回作成した受信部で受信して、&lt;br /&gt;
本物のリモコンと同じ結果になっていることを確認すればいいことに気がついた&lt;/p&gt;
&lt;p&gt;試してみたら本物のリモコンはきっちり毎回同じ結果が出力されるのに対し、自作の方は安定しない様子&lt;br /&gt;
色々本物のリモコンが再現できるように調節しようとしてみたけれど&lt;br /&gt;
Arduinoの性能に依存しているのか完璧に再現することはできなかった&lt;/p&gt;
&lt;p&gt;で、色々やっている時にふと気がついて本物のリモコンを携帯のカメラで覗いてみたら&lt;br /&gt;
今回使用しているLEDよりずいぶん明るく見えたのと、LEDが1個でなく3個付いていることに気がついた&lt;br /&gt;
そこで自作の方も元々は1個だったんだけれど、3個に増やしてみたら期待通りに動作するようになった&lt;/p&gt;
&lt;p&gt;期待通りの信号が送信できているかについては、自分で受信してみるか、オシロで確認&lt;br /&gt;
光量については本物のリモコンと自作のものをカメラを使って目でで確認するしかない&lt;br /&gt;
受信側が認識できるくらいの光量を確保しなければいけないので、同じ部品、同じソースを使っても&lt;br /&gt;
受信側の機器が異なっていればうまく動作しないことがあることがわかった&lt;/p&gt;
&lt;p&gt;参考にしたサイト&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elm-chan.org/docs/ir_format.html"&gt;赤外線リモコンの通信フォーマット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/download/k4174_format.pdf"&gt;リモコンフォーマット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://shokai.org/blog/archives/8012"&gt;ArduinoとRubyで赤外線リモコン作ってWebから操作できるようにした&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://eikatou.net/blog/2012/07/1796/"&gt;Arduinoでリモコン作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://d.hatena.ne.jp/NeoCat/20090419/1240158722"&gt;Arduinoで学習リモコン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Tue, 25 Nov 2014 23:02:00 +0900</pubDate><guid>tag:,2014-11-25:posts/2014/11/ir.html</guid><category>Arduino</category><category>IR</category></item><item><title>Macのホスト名を固定する</title><link>/posts/2014/11/mac-hostname.html</link><description>&lt;p&gt;自宅のMacでは設定済みだったんだけれど、オフィスのMacでは未設定だったのでメモ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;scutil --get HostName
HostName: not &lt;span class="nb"&gt;set&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この結果になる場合ターミナルで表示されるホスト名がDNSから逆引きしたものになることがあるみたい&lt;br /&gt;
オフィスの環境だとならないけれど、自宅の環境だと &lt;code&gt;System Preferences -&amp;gt; Sharing&lt;/code&gt; で&lt;br /&gt;
元々設定してある大文字小文字混じりのホスト名が全て小文字に変わってしまう&lt;br /&gt;
ここの &lt;code&gt;Edit&lt;/code&gt; を押すと &lt;code&gt;Use dynamic global hostname&lt;/code&gt; といういかにもそれっぽい設定があるけれどこれは特に効果はなし&lt;br /&gt;
そのような場合は冒頭で確認するために使ったコマンドを使って固定することができる&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# scutil --set HostName YourHostName&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ただこの設定はSystem Preferencesの設定とは別にあるようで同期しない&lt;br /&gt;
そのためここで元々の設定とは全く別の値を指定することができるが&lt;br /&gt;
混乱の元なのでそういったことが起きないように気をつける必要がある&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Mon, 10 Nov 2014 09:51:00 +0900</pubDate><guid>tag:,2014-11-10:posts/2014/11/mac-hostname.html</guid><category>Mac</category></item><item><title>使えなくなったHDDのS.M.A.R.T.の結果</title><link>/posts/2014/11/smart.html</link><description>&lt;p&gt;ずいぶん前の出来事だけれど、 &lt;a href="http://www.hgst.com/tech/techlib.nsf/techdocs/C2AF1DCDF0FBD887882578FE0082527B/$file/DS7K1000.D_ds.pdf"&gt;Hitachi Deskstar 7K1000.D&lt;/a&gt; がエラーを吐いて使えなくなったので&lt;br /&gt;
その時のS.M.A.R.T.の結果を記録しておく&lt;/p&gt;
&lt;p&gt;こんなメールでRAIDのアレイから外したことを通知されました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;This is an automatically generated mail message from mdadm

A Fail event had been detected on md device /dev/md1.

It could be related to component device /dev/sdc.

Faithfully yours, etc.

P.S. The /proc/mdstat file currently contains the following:

Personalities : [raid1]
md1 : active raid1 sdd[1] sdc[0](F)
      976762448 blocks super 1.0 [2/1] [_U]

md0 : active raid1 sdb[2] sda[0]
      2930266448 blocks super 1.0 [2/2] [UU]

unused devices: &amp;lt;none&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;とりあえずRAIDは手元にあった古いディスクに差し替えて&lt;br /&gt;
問題のHDDのS.M.A.R.T.を確認してみたらこんな感じでした&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# smartctl -a /dev/sdf&lt;/span&gt;
smartctl 6.1 2013-03-16 r3800 &lt;span class="o"&gt;[&lt;/span&gt;x86_64-linux-3.10.7-gentoo-r1&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;local &lt;/span&gt;build&lt;span class="o"&gt;)&lt;/span&gt;
Copyright &lt;span class="o"&gt;(&lt;/span&gt;C&lt;span class="o"&gt;)&lt;/span&gt; 2002-13, Bruce Allen, Christian Franke, www.smartmontools.org

&lt;span class="o"&gt;===&lt;/span&gt; START OF INFORMATION &lt;span class="nv"&gt;SECTION&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;
Model Family:     Hitachi Deskstar 7K1000.D
Device Model:     Hitachi HDS721010DLE630
Serial Number:    XXXXXXXXXXXXXX
LU WWN Device Id: &lt;span class="m"&gt;5&lt;/span&gt; 000cca 37cc0c0f2
Firmware Version: MS2OA5N0
User Capacity:    1,000,204,886,016 bytes &lt;span class="o"&gt;[&lt;/span&gt;1.00 TB&lt;span class="o"&gt;]&lt;/span&gt;
Sector Sizes:     &lt;span class="m"&gt;512&lt;/span&gt; bytes logical, &lt;span class="m"&gt;4096&lt;/span&gt; bytes physical
Rotation Rate:    &lt;span class="m"&gt;7200&lt;/span&gt; rpm
Device is:        In smartctl database &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; details use: -P show&lt;span class="o"&gt;]&lt;/span&gt;
ATA Version is:   ATA8-ACS T13/1699-D revision 4
SATA Version is:  SATA 2.6, 6.0 Gb/s &lt;span class="o"&gt;(&lt;/span&gt;current: 1.5 Gb/s&lt;span class="o"&gt;)&lt;/span&gt;
Local Time is:    Wed Aug &lt;span class="m"&gt;13&lt;/span&gt; 11:23:08 &lt;span class="m"&gt;2014&lt;/span&gt; JST
SMART support is: Available - device has SMART capability.
SMART support is: &lt;span class="nv"&gt;Enabled&lt;/span&gt;

&lt;span class="o"&gt;===&lt;/span&gt; START OF READ SMART DATA &lt;span class="nv"&gt;SECTION&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt;
SMART overall-health self-assessment &lt;span class="nb"&gt;test &lt;/span&gt;result: PASSED

General SMART Values:
Offline data collection status:  &lt;span class="o"&gt;(&lt;/span&gt;0x80&lt;span class="o"&gt;)&lt;/span&gt; Offline data collection activity
                                        was never started.
                                        Auto Offline Data Collection: Enabled.
Self-test execution status:      &lt;span class="o"&gt;(&lt;/span&gt;   0&lt;span class="o"&gt;)&lt;/span&gt; The previous self-test routine completed
                                        without error or no self-test has ever
                                        been run.
Total &lt;span class="nb"&gt;time &lt;/span&gt;to &lt;span class="nb"&gt;complete &lt;/span&gt;Offline
data collection:                &lt;span class="o"&gt;(&lt;/span&gt; 7410&lt;span class="o"&gt;)&lt;/span&gt; seconds.
Offline data collection
capabilities:                    &lt;span class="o"&gt;(&lt;/span&gt;0x5b&lt;span class="o"&gt;)&lt;/span&gt; SMART execute Offline immediate.
                                        Auto Offline data collection on/off support.
                                        Suspend Offline collection upon new
                                        command.
                                        Offline surface scan supported.
                                        Self-test supported.
                                        No Conveyance Self-test supported.
                                        Selective Self-test supported.
SMART capabilities:            &lt;span class="o"&gt;(&lt;/span&gt;0x0003&lt;span class="o"&gt;)&lt;/span&gt; Saves SMART data before entering
                                        power-saving mode.
                                        Supports SMART auto save timer.
Error logging capability:        &lt;span class="o"&gt;(&lt;/span&gt;0x01&lt;span class="o"&gt;)&lt;/span&gt; Error logging supported.
                                        General Purpose Logging supported.
Short self-test routine
recommended polling &lt;span class="nb"&gt;time&lt;/span&gt;:        &lt;span class="o"&gt;(&lt;/span&gt;   1&lt;span class="o"&gt;)&lt;/span&gt; minutes.
Extended self-test routine
recommended polling &lt;span class="nb"&gt;time&lt;/span&gt;:        &lt;span class="o"&gt;(&lt;/span&gt; 124&lt;span class="o"&gt;)&lt;/span&gt; minutes.
SCT capabilities:              &lt;span class="o"&gt;(&lt;/span&gt;0x003d&lt;span class="o"&gt;)&lt;/span&gt; SCT Status supported.
                                        SCT Error Recovery Control supported.
                                        SCT Feature Control supported.
                                        SCT Data Table supported.

SMART Attributes Data Structure revision number: 16
Vendor Specific SMART Attributes with Thresholds:
ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE
  &lt;span class="m"&gt;1&lt;/span&gt; Raw_Read_Error_Rate     0x000b   &lt;span class="m"&gt;079&lt;/span&gt;   &lt;span class="m"&gt;079&lt;/span&gt;   &lt;span class="m"&gt;016&lt;/span&gt;    Pre-fail  Always       -       824
  &lt;span class="m"&gt;2&lt;/span&gt; Throughput_Performance  0x0005   &lt;span class="m"&gt;141&lt;/span&gt;   &lt;span class="m"&gt;141&lt;/span&gt;   &lt;span class="m"&gt;054&lt;/span&gt;    Pre-fail  Offline      -       74
  &lt;span class="m"&gt;3&lt;/span&gt; Spin_Up_Time            0x0007   &lt;span class="m"&gt;124&lt;/span&gt;   &lt;span class="m"&gt;124&lt;/span&gt;   &lt;span class="m"&gt;024&lt;/span&gt;    Pre-fail  Always       -       &lt;span class="m"&gt;185&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Average 185&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="m"&gt;4&lt;/span&gt; Start_Stop_Count        0x0012   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       966
  &lt;span class="m"&gt;5&lt;/span&gt; Reallocated_Sector_Ct   0x0033   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;005&lt;/span&gt;    Pre-fail  Always       -       62
  &lt;span class="m"&gt;7&lt;/span&gt; Seek_Error_Rate         0x000b   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;067&lt;/span&gt;    Pre-fail  Always       -       0
  &lt;span class="m"&gt;8&lt;/span&gt; Seek_Time_Performance   0x0005   &lt;span class="m"&gt;130&lt;/span&gt;   &lt;span class="m"&gt;130&lt;/span&gt;   &lt;span class="m"&gt;020&lt;/span&gt;    Pre-fail  Offline      -       28
  &lt;span class="m"&gt;9&lt;/span&gt; Power_On_Hours          0x0012   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       11362
 &lt;span class="m"&gt;10&lt;/span&gt; Spin_Retry_Count        0x0013   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;060&lt;/span&gt;    Pre-fail  Always       -       0
 &lt;span class="m"&gt;12&lt;/span&gt; Power_Cycle_Count       0x0032   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       71
&lt;span class="m"&gt;192&lt;/span&gt; Power-Off_Retract_Count 0x0032   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       1247
&lt;span class="m"&gt;193&lt;/span&gt; Load_Cycle_Count        0x0012   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;099&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       1247
&lt;span class="m"&gt;194&lt;/span&gt; Temperature_Celsius     0x0002   &lt;span class="m"&gt;171&lt;/span&gt;   &lt;span class="m"&gt;171&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       &lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;Min/Max 17/45&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;196&lt;/span&gt; Reallocated_Event_Count 0x0032   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       110
&lt;span class="m"&gt;197&lt;/span&gt; Current_Pending_Sector  0x0022   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       0
&lt;span class="m"&gt;198&lt;/span&gt; Offline_Uncorrectable   0x0008   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;100&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Offline      -       0
&lt;span class="m"&gt;199&lt;/span&gt; UDMA_CRC_Error_Count    0x000a   &lt;span class="m"&gt;200&lt;/span&gt;   &lt;span class="m"&gt;200&lt;/span&gt;   &lt;span class="m"&gt;000&lt;/span&gt;    Old_age   Always       -       0

SMART Error Log Version: 1
No Errors Logged

SMART Self-test log structure revision number 1
Num  Test_Description    Status                  Remaining  LifeTime&lt;span class="o"&gt;(&lt;/span&gt;hours&lt;span class="o"&gt;)&lt;/span&gt;  LBA_of_first_error
&lt;span class="c"&gt;# 1  Short offline       Completed without error       00%     11361         -&lt;/span&gt;
&lt;span class="c"&gt;# 2  Short offline       Completed without error       00%     11319         -&lt;/span&gt;
&lt;span class="c"&gt;# 3  Short offline       Completed without error       00%     11228         -&lt;/span&gt;
&lt;span class="c"&gt;# 4  Short offline       Completed without error       00%     10769         -&lt;/span&gt;
&lt;span class="c"&gt;# 5  Short offline       Completed without error       00%     10702         -&lt;/span&gt;
&lt;span class="c"&gt;# 6  Short offline       Completed without error       00%     10702         -&lt;/span&gt;
&lt;span class="c"&gt;# 7  Short offline       Completed without error       00%     10446         -&lt;/span&gt;
&lt;span class="c"&gt;# 8  Short offline       Completed without error       00%      9861         -&lt;/span&gt;
&lt;span class="c"&gt;# 9  Short offline       Completed without error       00%      9817         -&lt;/span&gt;
&lt;span class="c"&gt;#10  Short offline       Completed without error       00%      9492         -&lt;/span&gt;
&lt;span class="c"&gt;#11  Short offline       Completed without error       00%      9431         -&lt;/span&gt;
&lt;span class="c"&gt;#12  Short offline       Completed without error       00%      8981         -&lt;/span&gt;
&lt;span class="c"&gt;#13  Short offline       Completed without error       00%         1         -&lt;/span&gt;

SMART Selective self-test log data structure revision number 1
 SPAN  MIN_LBA  MAX_LBA  CURRENT_TEST_STATUS
    &lt;span class="m"&gt;1&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;  Not_testing
    &lt;span class="m"&gt;2&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;  Not_testing
    &lt;span class="m"&gt;3&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;  Not_testing
    &lt;span class="m"&gt;4&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;  Not_testing
    &lt;span class="m"&gt;5&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="m"&gt;0&lt;/span&gt;  Not_testing
Selective self-test flags &lt;span class="o"&gt;(&lt;/span&gt;0x0&lt;span class="o"&gt;)&lt;/span&gt;:
  After scanning selected spans, &lt;span class="k"&gt;do&lt;/span&gt; NOT &lt;span class="nb"&gt;read&lt;/span&gt;-scan remainder of disk.
If Selective self-test is pending on power-up, resume after &lt;span class="m"&gt;0&lt;/span&gt; minute delay.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OS側からエラーだからといって外されるのにS.M.A.R.T.では検出されないのね…&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Mon, 03 Nov 2014 21:31:00 +0900</pubDate><guid>tag:,2014-11-03:posts/2014/11/smart.html</guid><category>HDD</category></item><item><title>裁断機(DC-210N)を購入してみた</title><link>/posts/2014/10/dc-210n.html</link><description>&lt;p&gt;もうずっと読んでいない参考書とか、学生時代の教科書とかを整理したいので裁断機を購入してみました&lt;br /&gt;
色々検討したんですが大型の裁断機ではなく、それより簡易的な &lt;a href="http://www.carl.co.jp/item/DC-210N.html"&gt;DC-210N&lt;/a&gt; を選択&lt;br /&gt;
一度に裁断できる枚数が40枚ということなので、裁断する前にまず本を分解する作業が必ず入るけれど&lt;br /&gt;
まぁ元々そんなに本を買う方でないので使う機会もそれほど頻繁でないだろうということでしまっておけるこのモデルにしました&lt;/p&gt;
&lt;p&gt;外箱&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/10/DC-210N_1.jpg"&gt;&lt;img alt="image" src="/static/images/2014/10/DC-210N_1_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;外観&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/10/DC-210N_2.jpg"&gt;&lt;img alt="image" src="/static/images/2014/10/DC-210N_2_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今回はお試しでこの冊子を裁断してみます&lt;br /&gt;
薄いので分割しなくても裁断できました&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/10/DC-210N_3.jpg"&gt;&lt;img alt="image" src="/static/images/2014/10/DC-210N_3_s.jpg" /&gt;&lt;/a&gt;
&lt;a href="/static/images/2014/10/DC-210N_4.jpg"&gt;&lt;img alt="image" src="/static/images/2014/10/DC-210N_4_s.jpg" /&gt;&lt;/a&gt;
&lt;a href="/static/images/2014/10/DC-210N_5.jpg"&gt;&lt;img alt="image" src="/static/images/2014/10/DC-210N_5_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Tue, 28 Oct 2014 00:48:00 +0900</pubDate><guid>tag:,2014-10-28:posts/2014/10/dc-210n.html</guid><category>e-book</category></item><item><title>操作ミスでファイルを消してしまった時の復活方法</title><link>/posts/2014/10/extundelete.html</link><description>&lt;p&gt;ファイルサーバのデータを整理中に &lt;code&gt;rm *hoge*&lt;/code&gt; と入力しようとして &lt;code&gt;rm *&lt;/code&gt; まで入力した状態で&lt;br /&gt;
hogeをコピペで貼り付けようとしました&lt;br /&gt;
この時hogeの先頭に改行が含まれていたため、 &lt;code&gt;rm *&lt;/code&gt; が実行されてしまい&lt;br /&gt;
カレントディレクトリ内のファイルを全て削除してしまいました、事故です&lt;br /&gt;
このような場合、 &lt;a href="http://extundelete.sourceforge.net/"&gt;extundelete&lt;/a&gt; というソフトを使うと復活できるみたいなので、試してみました&lt;/p&gt;
&lt;p&gt;まず削除してしまったファイルがあるボリュームをroでマウントしなおします&lt;br /&gt;
この作業はできるだけ早く行う必要があります&lt;br /&gt;
自分の場合、別のプロセスがこのボリュームに書き込みをしていたので&lt;br /&gt;
削除したファイルのinodeが再利用されてしまいかなりのファイルを失いました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mount -o remount,ro /mnt/lvm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;次にdateコマンドで操作ミスが発生した時刻の確認をします&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;date +%s
1413993600
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;extundeleteで復活させます&lt;br /&gt;
復活できなかったファイルが以下のようにログに出力されて&lt;br /&gt;
復活できたファイルはカレントディレクトリの &lt;code&gt;RECOVERED_FILES&lt;/code&gt; 以下に出力されます&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# extundelete --restore-all --after 1413993600 /dev/mapper/vg0-lv0&lt;/span&gt;
Only show and process deleted entries &lt;span class="k"&gt;if&lt;/span&gt; they are deleted on or after &lt;span class="m"&gt;1413993600&lt;/span&gt; and before 9223372036854775807.
NOTICE: Extended attributes are not restored.
Loading filesystem metadata ... &lt;span class="m"&gt;52164&lt;/span&gt; groups loaded.
Loading journal descriptors ... &lt;span class="m"&gt;26255&lt;/span&gt; descriptors loaded.
Searching &lt;span class="k"&gt;for&lt;/span&gt; recoverable inodes in directory / ...
&lt;span class="m"&gt;160&lt;/span&gt; recoverable inodes found.
Looking through the directory structure &lt;span class="k"&gt;for&lt;/span&gt; deleted files ...
Unable to restore inode &lt;span class="m"&gt;224265493&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: Space has been reallocated.
Unable to restore inode &lt;span class="m"&gt;224265494&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: Space has been reallocated.
Unable to restore inode &lt;span class="m"&gt;224265503&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: Space has been reallocated.
...
Unable to restore inode &lt;span class="m"&gt;91544629&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
Unable to restore inode &lt;span class="m"&gt;91544798&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
Unable to restore inode &lt;span class="m"&gt;91544633&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;/path/to/deleted/file&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
...
&lt;span class="m"&gt;30&lt;/span&gt; recoverable inodes still lost.
Unable to restore inode &lt;span class="m"&gt;99378493&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;file.99378493&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
Unable to restore inode &lt;span class="m"&gt;99379721&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;file.99379721&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
Unable to restore inode &lt;span class="m"&gt;99379967&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;file.99379967&lt;span class="o"&gt;)&lt;/span&gt;: No undeleted copies found in the journal.
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;オペミス怖いですね…&lt;br /&gt;
とりあえず &lt;code&gt;rm&lt;/code&gt; は &lt;code&gt;rm -i&lt;/code&gt; のエイリアスにしておこうかと思います&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Thu, 23 Oct 2014 01:00:00 +0900</pubDate><guid>tag:,2014-10-23:posts/2014/10/extundelete.html</guid><category>Linux</category></item><item><title>Windows10を試してみた</title><link>/posts/2014/10/windows10.html</link><description>&lt;p&gt;&lt;a href="http://windows.microsoft.com/ja-jp/windows/preview"&gt;Windows10 Technical Preview&lt;/a&gt;がでたのでKVMにインストールしてみた&lt;br /&gt;
このサイトにLinuxからアクセスすると「お使いのオペレーティング システムにはプレビュー版をインストールできません。」と&lt;br /&gt;
表示されるがUserAgentをIEに変更してから再度アクセスしたらダウンロードすることができた&lt;/p&gt;
&lt;p&gt;QEMUはひさしぶりなので使い方を忘れていたんだけれど以下のようにすることで特に問題なくインストールして動作させることができた&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;qemu-img create -f qcow2 windows10.img 32G
&lt;span class="nv"&gt;$ &lt;/span&gt;qemu-system-x86_64 -enable-kvm -cpu host -hda windows10.img -cdrom Windows10-en-x64.iso -boot d -m 4G
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ただ電源の切り方がWindows8.1から更に変更されているので少し戸惑った&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/10/windows10.jpg"&gt;&lt;img alt="Windows10 with KVM" src="/static/images/2014/10/windows10_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Mon, 06 Oct 2014 01:45:00 +0900</pubDate><guid>tag:,2014-10-06:posts/2014/10/windows10.html</guid><category>Linux</category><category>Gentoo</category><category>KVM</category><category>Windows</category></item><item><title>今更Sambaをインストールした</title><link>/posts/2014/09/samba.html</link><description>&lt;p&gt;しばらく前に&lt;a href="http://www.asus.com/jp/Tablets_Mobile/ASUS_VivoTab_Note_8_M80TA/"&gt;ASUS VivoTab Note 8&lt;/a&gt;を買ったり、&lt;a href="http://h50146.www5.hp.com/directplus/personal/notebooks/dp_pavilion15_n200_amd/"&gt;HP Pavilion 15-n200 (AMD)&lt;/a&gt;が29800円だったので妻に買ったりMacBook Airもあるし&lt;br /&gt;
Linux以外のマシンが増えてきたので、これらのマシンからもファイルサーバを利用できるようにSambaの導入をしました&lt;br /&gt;
今までは自分のLinuxマシンだけだったんでNFSで間に合ってたんだけどね&lt;/p&gt;
&lt;p&gt;Gentooでのインストールは特に気にすることなくいつも通り&lt;br /&gt;
自分はクライアントの機能は不要だったので &lt;code&gt;-client&lt;/code&gt; と &lt;code&gt;-smbclient&lt;/code&gt; を指定した&lt;br /&gt;
デフォルトの設定ファイルをコピーして自分の設定を作っていく&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# emerge -av samba&lt;/span&gt;
&lt;span class="c"&gt;# cp /etc/samba/smb.conf.default /etc/samba/smb.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下に変更した設定をメモしておく&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;workgroup = WORKGROUP&lt;br /&gt;
Windowsのデフォルトに合わせる&lt;/li&gt;
&lt;li&gt;hosts allow = 10.0.0.&lt;br /&gt;
hosts deny = all&lt;br /&gt;
LAN内のマシン以外からのアクセスを拒否する&lt;/li&gt;
&lt;li&gt;load printers = no&lt;br /&gt;
プリンタはいらない&lt;/li&gt;
&lt;li&gt;interfaces = br0&lt;br /&gt;
bind interfaces only = yes&lt;br /&gt;
LAN側のNICでのみ待ち受ける&lt;/li&gt;
&lt;li&gt;max protocol = smb2&lt;br /&gt;
全てWindows8.1なので新しいプロトコルが使える&lt;/li&gt;
&lt;li&gt;map to guest = Bad User&lt;br /&gt;
ログインに失敗した場合はGuestユーザとして扱う&lt;br /&gt;
共有ディレクトリの設定の部分で &lt;code&gt;public = yes&lt;/code&gt; と設定するとアクセス可能になる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;共有ディレクトリの設定はこのようにした&lt;br /&gt;
元々あった &lt;code&gt;homes&lt;/code&gt; と &lt;code&gt;printers&lt;/code&gt; は不要なのでコメントアウトして&lt;br /&gt;
新たにSamba用のディレクトリ以下を公開することにした&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[Home]&lt;/span&gt;
   &lt;span class="na"&gt;comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Home Directories&lt;/span&gt;
&lt;span class="s"&gt;   path = /mnt/lvm/samba/%u&lt;/span&gt;
&lt;span class="s"&gt;   writable = yes&lt;/span&gt;
&lt;span class="s"&gt;   printable = no&lt;/span&gt;

&lt;span class="k"&gt;[Public]&lt;/span&gt;
   &lt;span class="na"&gt;comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;Public&lt;/span&gt;
&lt;span class="s"&gt;   path = /mnt/lvm/samba/Public&lt;/span&gt;
&lt;span class="s"&gt;   public = yes&lt;/span&gt;
&lt;span class="s"&gt;   writable = yes&lt;/span&gt;
&lt;span class="s"&gt;   printable = no&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;共有ディレクトリにアクセスできるユーザを作るにはまずLinuxのユーザを作成しなければいけない&lt;br /&gt;
その後、既存のLinuxのユーザをSambaへ登録する操作が必要になる&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# useradd sambauser&lt;/span&gt;
&lt;span class="c"&gt;# pdbedit -a -u sambauser&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;なおSamba側に登録されているユーザの一覧は &lt;code&gt;pdbedit -L -v&lt;/code&gt; で確認できる&lt;/p&gt;
&lt;p&gt;以上で設定は終了&lt;br /&gt;
&lt;code&gt;testparm&lt;/code&gt; コマンドを実行すると設定の確認ができる&lt;br /&gt;
最後にサービスへの登録と起動をする&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# rc-update add samba default&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/samba start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでクライアント側から見れるようになるはず&lt;br /&gt;
ただWindows、Macどちらの場合もワークグループ名を明示的に指定しないとログインできなかった&lt;br /&gt;
ユーザ名の欄に &lt;code&gt;WORKGROUP\sambauser&lt;/code&gt; のようにワークグループ名を指定した形式で入力しなければならない&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windowsは &lt;code&gt;エクスプローラ&lt;/code&gt; の &lt;code&gt;ネットワーク&lt;/code&gt; にサーバが表示されるのでダブルクリックして接続&lt;/li&gt;
&lt;li&gt;Macは &lt;code&gt;Finder&lt;/code&gt; -&amp;gt; &lt;code&gt;Go&lt;/code&gt; -&amp;gt; &lt;code&gt;Connect to Server&lt;/code&gt; で表示されるダイアログに &lt;code&gt;smb://hostname&lt;/code&gt; と入力し接続&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらの設定で今のところ問題なく使用できている&lt;br /&gt;
しかし &lt;code&gt;/var/log/samba/log.smbd&lt;/code&gt; にこのようなログが出ているのでそのうち修正したい &lt;a href="http://inaz2.hatenablog.com/entry/2013/07/07/054616"&gt;*1&lt;/a&gt; &lt;a href="http://consultancy.edvoncken.net/index.php/HOWTO_Disable_printing_in_Samba"&gt;*2&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Unable to open printcap file /etc/printcap for read!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;この設定の追加で上記のエラーが出なくなった&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;printing = bsd&lt;/li&gt;
&lt;li&gt;printcap name = /dev/null&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Mon, 01 Sep 2014 13:42:00 +0900</pubDate><guid>tag:,2014-09-01:posts/2014/09/samba.html</guid><category>Samba</category><category>Linux</category><category>Gentoo</category><category>Windows</category><category>Mac</category></item><item><title>MySQL5.1から5.5へアップデート</title><link>/posts/2014/08/mysql5.5.html</link><description>&lt;p&gt;GentooからMySQL5.5がStableになったし5.1はmaskするよ、というお知らせが来ていました&lt;br /&gt;
epgrecとMediatombで使っているのですが5.5でも問題なさそうなのでアップデートしました&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MySQLの停止&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/mysql stop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;emergeを使用してアップデート&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# emerge -uav mysql&lt;/span&gt;
&lt;span class="c"&gt;# etc-update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InnoDBが有効になっているとepgrecが遅くなるみたいなので設定を変更する &lt;a href="http://sarami.pv.s-labo.com/blog/zatta/?p=221"&gt;*&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt; に以下の二行を追加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;skip-innodb
default-storage-engine=MyISAM
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;関連パッケージの更新&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# emerge @preserved-rebuild -a&lt;/span&gt;
&lt;span class="c"&gt;# revdep-rebuild --library libmysqlclient.so.16&lt;/span&gt;
&lt;span class="c"&gt;# revdep-rebuild --library libmysqlclient_r.so.16&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQLを再起動&lt;br /&gt;
再起動すると &lt;code&gt;/var/log/mysql/mysqld.err&lt;/code&gt; に以下のようなエラーが出力されて&lt;br /&gt;
&lt;code&gt;mysql_upgrade&lt;/code&gt; を実行するように指示されます &lt;a href="http://server-setting.info/centos/mysql5-1_mysql5-5_upgrade.html"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/mysql start&lt;/span&gt;
&lt;span class="c"&gt;# tail /var/log/mysql/mysqld.err&lt;/span&gt;
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Missing system table mysql.proxies_priv&lt;span class="p"&gt;;&lt;/span&gt; please run mysql_upgrade to create it
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_current&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_history&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_history_long&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_consumers&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_instruments&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_timers&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;performance_timers&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;threads&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_by_thread_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_by_instance&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_global_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_summary_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_summary_by_instance&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;mutex_instances&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;rwlock_instances&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;cond_instances&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_instances&amp;#39;&lt;/span&gt; has the wrong structure
&lt;span class="m"&gt;140830&lt;/span&gt; 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;Note&lt;span class="o"&gt;]&lt;/span&gt; Event Scheduler: Loaded &lt;span class="m"&gt;0&lt;/span&gt; events
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DBの更新と再度MySQLを再起動&lt;br /&gt;
再起動後にログを確認してエラーがでていなければ完了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mysql_upgrade -u root -p&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/mysql restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Sun, 31 Aug 2014 03:32:00 +0900</pubDate><guid>tag:,2014-08-31:posts/2014/08/mysql5.5.html</guid><category>MySQL</category><category>Linux</category><category>Gentoo</category></item><item><title>Nginxで自己署名証明書を使う</title><link>/posts/2014/08/self-signed-certificate.html</link><description>&lt;p&gt;ドメインを取ったのでそのうちきちんとした証明書を使おうかとは思っていますが&lt;br /&gt;
とりあえずしばらくはオレオレ証明書で運用しようと思っています&lt;br /&gt;
ということで作成の仕方をメモ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;パスフレーズなしの秘密鍵を作成&lt;br /&gt;
色々なサイトを見ていると一度パスフレーズありで作成してから&lt;br /&gt;
パスフレーズを削除したファイルを作りなおすような手順を踏んでいたりしますがこれでよさそう&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl genrsa -out server.key 2048&lt;/span&gt;
Generating RSA private key, &lt;span class="m"&gt;2048&lt;/span&gt; bit long modulus
................................................+++
........................................+++
e is &lt;span class="m"&gt;65537&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0x10001&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公開鍵の作成&lt;br /&gt;
HTTPSで暗号化されていればいいだけなので &lt;code&gt;Common Name&lt;/code&gt; 以外は適当でいいです&lt;br /&gt;
&lt;code&gt;.&lt;/code&gt; を入力した場合そのフィールドは空になるみたいなので全て空にしました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl req -new -key server.key -out server.csr&lt;/span&gt;
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, the field will be left blank.
-----
Country Name &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; letter code&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;AU&lt;span class="o"&gt;]&lt;/span&gt;:.
State or Province Name &lt;span class="o"&gt;(&lt;/span&gt;full name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Some-State&lt;span class="o"&gt;]&lt;/span&gt;:.
Locality Name &lt;span class="o"&gt;(&lt;/span&gt;eg, city&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:
Organization Name &lt;span class="o"&gt;(&lt;/span&gt;eg, company&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Internet Widgits Pty Ltd&lt;span class="o"&gt;]&lt;/span&gt;:.
Organizational Unit Name &lt;span class="o"&gt;(&lt;/span&gt;eg, section&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:
Common Name &lt;span class="o"&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:&amp;lt;your domain name&amp;gt;
Email Address &lt;span class="o"&gt;[]&lt;/span&gt;:

Please enter the following &lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt; attributes
to be sent with your certificate request
A challenge password &lt;span class="o"&gt;[]&lt;/span&gt;:
An optional company name &lt;span class="o"&gt;[]&lt;/span&gt;:
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;証明書の作成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt&lt;/span&gt;
Signature ok
&lt;span class="nv"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/CN&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your domain name&amp;gt;
Getting Private key
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以上で証明書の準備はできたので &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; を編集して再起動すれば完了です&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
        listen &lt;span class="m"&gt;443&lt;/span&gt; ssl&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate     /path/to/certificate/server.crt&lt;span class="p"&gt;;&lt;/span&gt;
        ssl_certificate_key /path/to/certificate/server.key&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Sat, 16 Aug 2014 02:42:00 +0900</pubDate><guid>tag:,2014-08-16:posts/2014/08/self-signed-certificate.html</guid><category>Nginx</category><category>Linux</category></item><item><title>MacUIM/Mozcを使う</title><link>/posts/2014/08/macuim-mozc.html</link><description>&lt;p&gt;ターミナルは&lt;a href="http://software.schmorp.de/pkg/rxvt-unicode.html"&gt;rxvt-unicode&lt;/a&gt;をビルドして使用しています&lt;br /&gt;
これはX11のアプリなのでMacの標準のインプットメソッド経由では日本語を入力することができません&lt;br /&gt;
今までほとんど困ることはなくて、必要なときはコピペで対応していました&lt;br /&gt;
ただ最近ここをvimで書いていることもあり、&lt;a href="https://code.google.com/p/macuim/"&gt;MacUIM&lt;/a&gt;をインストールして入力できるようにしました&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;まず上記サイトからダウンロードしてきたアーカイブをインストールします&lt;/li&gt;
&lt;li&gt;次に &lt;code&gt;System Preferences -&amp;gt; Language &amp;amp; Text -&amp;gt; Input Sources&lt;/code&gt; で &lt;code&gt;MacUIM (Japanese)&lt;/code&gt; のチェックを入れる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System Preferences -&amp;gt; MacUIM&lt;/code&gt; を開いて&lt;ol&gt;
&lt;li&gt;&lt;code&gt;General -&amp;gt; Input Method&lt;/code&gt; で &lt;code&gt;Mozc&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Helper -&amp;gt; Use Helper-Applet&lt;/code&gt; をチェック (メニューバーに状態が表示される)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Specify default IM&lt;/code&gt; をチェック&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Default input method&lt;/code&gt; で &lt;code&gt;Mozc&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;右下の &lt;code&gt;Apply&lt;/code&gt; ボタンを押す&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.xinitrc.d/uim-xim.sh&lt;/code&gt; に以下の内容で起動スクリプトを配置する&lt;br /&gt;
このファイルを追加することでX11の起動時にUIMが起動する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
/Library/Frameworks/UIM.framework/Versions/Current/bin/uim-xim &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; にでも以下の環境変数を追加する&lt;br /&gt;
X11でurxvtしか使わないのであればこれでOK&lt;br /&gt;
他のアプリでも使用する場合は他からも見える位置で環境変数を定義する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;XMODIFIERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@im=uim&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uim&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;urxvtの起動時に &lt;code&gt;-pt OffTheSpot&lt;/code&gt; を追加する&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;とりあえずここまででデフォルトの &lt;code&gt;Shift+Space&lt;/code&gt; を使用すれば日本語入力ができるようになっているはず&lt;br /&gt;
ここからはおまけ&lt;br /&gt;
Input sourceはMacUIM固定で &lt;code&gt;Cmd+Space&lt;/code&gt; を日英の切り替えに使用したければ以下の設定をする&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;System Preferences -&amp;gt; Language &amp;amp; Text -&amp;gt; Input Sources&lt;/code&gt; を開いて&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Input source shortcuts&lt;/code&gt; にあるショートカットを無効にする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Input source options&lt;/code&gt; は &lt;code&gt;Use the same one in all documents&lt;/code&gt; を選択&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.uim.d/customs/custom-mozc-keys.scm&lt;/code&gt; をエディタで開いて以下の部分を編集する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;(define mozc-on-key &amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;))
(define mozc-on-key? (make-key-predicate &amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;)))
(define mozc-off-key &amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;))
(define mozc-off-key? (make-key-predicate &amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;)))
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;System Preferences -&amp;gt; MacUIM&lt;/code&gt; を開いて&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Enable input method toggle by hot key&lt;/code&gt; のチェックを外す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Mozc key bindings&lt;/code&gt; の &lt;code&gt;on&lt;/code&gt; と &lt;code&gt;off&lt;/code&gt; が &lt;code&gt;&amp;lt;Meta&amp;gt;space&lt;/code&gt; になっていることを確認&lt;/li&gt;
&lt;li&gt;右下の &lt;code&gt;Apply&lt;/code&gt; ボタンを押す&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上で &lt;code&gt;Cmd+Space&lt;/code&gt; の入力でネイティブでもX11でも日本語入力の切り替えをすることができるようになりました&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Sat, 02 Aug 2014 02:04:00 +0900</pubDate><guid>tag:,2014-08-02:posts/2014/08/macuim-mozc.html</guid><category>Mac</category><category>MacUIM</category><category>Mozc</category></item><item><title>AquesTalk pico LSIをI2Cで接続する</title><link>/posts/2014/07/aquestalk-i2c.html</link><description>&lt;p&gt;ArduinoとAquesTalkをI2Cで接続してみました&lt;br /&gt;
配線は以下の通り  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pin&lt;/th&gt;
&lt;th&gt;AquesTalk&lt;/th&gt;
&lt;th&gt;-&amp;gt;&lt;/th&gt;
&lt;th&gt;Arduino&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;/RESET&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RESET&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;SMOD0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;SMOD1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;VCC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;VCC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;SDA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;SCL&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;SMOD0&lt;/code&gt; と &lt;code&gt;SMOD1&lt;/code&gt; については技術資料の &lt;code&gt;表9.1 通信モード&lt;/code&gt; を参照&lt;br /&gt;
I2Cで接続するには &lt;code&gt;SMOD0 = 0&lt;/code&gt; 、 &lt;code&gt;SMOD1 = 1&lt;/code&gt; にする必要があります&lt;br /&gt;
あとは12番の &lt;code&gt;AOUT&lt;/code&gt; をアンプの &lt;code&gt;IN+&lt;/code&gt; 、 &lt;code&gt;GND&lt;/code&gt; を &lt;code&gt;IN-&lt;/code&gt; に接続します&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/07/IMAG1036.jpg"&gt;&lt;img alt="AquesTalk pico LSI I2C" src="/static/images/2014/07/IMAG1036_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;技術資料の &lt;code&gt;5. 基本回路&lt;/code&gt; にある回路図を見ると、これ以外に &lt;code&gt;VCC&lt;/code&gt; と &lt;code&gt;AOUT&lt;/code&gt; にコンデンサが追加されています&lt;br /&gt;
これはバイパスコンデンサというものらしく電源の安定化やノイズの発生を抑えたりする役割があるそうです &lt;a href="http://www.geocities.jp/zattouka/GarageHouse/micon/circuit/VoltREG.htm#pascon"&gt;*1&lt;/a&gt;&lt;br /&gt;
とりあえず、無しでも動きました(ぇ&lt;/p&gt;
&lt;p&gt;他に &lt;code&gt;9.2. I2C通信&lt;/code&gt; の部分を見ると &lt;code&gt;SDA&lt;/code&gt; 、 &lt;code&gt;SCL&lt;/code&gt; 共に &lt;code&gt;5KΩ&lt;/code&gt; 程度のプルアップ抵抗が必要とあります&lt;br /&gt;
プルアップ抵抗なんですが調べたところ標準の &lt;code&gt;Wire.h&lt;/code&gt; を使う場合Arduino内蔵の抵抗で問題なさそうなので &lt;a href="http://www.senio.co.jp/bbs/viewtopic.php?f=7&amp;amp;t=260"&gt;*2&lt;/a&gt; &lt;a href="http://myboom.mkch.net/modules/pukiwiki/180.html"&gt;*3&lt;/a&gt;&lt;br /&gt;
これも無しで試したところ、動きました&lt;/p&gt;
&lt;p&gt;というわけでAquesTalk以外に特に部品を追加することなく準備ができました&lt;br /&gt;
動作確認に使用したスケッチは&lt;a href="https://github.com/lostman-github/arduino/blob/master/Uno/AquesTalk/sample/sample.ino"&gt;GitHub&lt;/a&gt;にありますがここに貼り付けておきます &lt;a href="http://enajet.air-nifty.com/blog/2012/01/aquestalk-pico-.html"&gt;*4&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;Wire.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define PICO_I2C_ADDRESS 0x2E&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;isReady&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;beginTransmission&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PICO_I2C_ADDRESS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yukkurisiteittene&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endTransmission&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// send once&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;isReady&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;requestFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PICO_I2C_ADDRESS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Fri, 25 Jul 2014 23:49:00 +0900</pubDate><guid>tag:,2014-07-25:posts/2014/07/aquestalk-i2c.html</guid><category>Arduino</category><category>AquesTalk pico LSI</category></item><item><title>GitHub Pages関連で調べたこと</title><link>/posts/2014/07/github-pages.html</link><description>&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-a-cname-file-to-your-repository"&gt;Adding a CNAME file to your repository&lt;/a&gt;&lt;br /&gt;
  サブドメインを使用する場合はリポジトリに割り当てたいサブドメインを書いた &lt;code&gt;CNAME&lt;/code&gt; ファイルを追加するのと、&lt;br /&gt;
  使用しているDNSの設定でサブドメインと &lt;code&gt;hoge.github.io&lt;/code&gt; をCNAMEで関連付ける&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-submodules-with-pages"&gt;Using submodules with Pages&lt;/a&gt;&lt;br /&gt;
  gitのsubmoduleを使用する場合、リポジトリのURLは &lt;code&gt;git://&lt;/code&gt; でなく &lt;code&gt;https://&lt;/code&gt; を使用しなければいけない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-jekyll-with-pages#turning-jekyll-off"&gt;Turning Jekyll off&lt;/a&gt;&lt;br /&gt;
  デフォルトでJekyllが有効になっているので &lt;code&gt;*.rst&lt;/code&gt; なファイルをアップロードすると変換しようとする&lt;br /&gt;
  これを無効にするために &lt;code&gt;.nojekyll&lt;/code&gt; をリポジトリのルートに作成する&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Thu, 24 Jul 2014 00:16:00 +0900</pubDate><guid>tag:,2014-07-24:posts/2014/07/github-pages.html</guid><category>GitHub</category></item><item><title>AquesTalk pico LSIの動作確認</title><link>/posts/2014/07/aquestalk.html</link><description>&lt;p&gt;以前購入していた&lt;a href="http://www.a-quest.com/products/aquestalkpicolsi.html"&gt;ATP3011F1-PU&lt;/a&gt;(&lt;a href="http://akizukidenshi.com/catalog/g/gI-06220/"&gt;秋月&lt;/a&gt;で850円)の動作確認をしてみました&lt;br /&gt;
紹介動画にもありますがArduino UNOに挿してアンプ付きのスピーカと接続、&lt;br /&gt;
PCからシリアルモニタで文字を送信するだけで音声を出すことができます&lt;br /&gt;
(技術資料 &lt;code&gt;13.4. Arduinoボードを利用した簡易動作&lt;/code&gt; を参照)&lt;br /&gt;
通常Arduinoから使う場合はI2C接続で使うことになると思いますが、&lt;br /&gt;
I2C接続は後日試すとして今回はこの方法で動作確認をしてみました&lt;/p&gt;
&lt;p&gt;まずうちにはアンプ付きのスピーカなんて無いのでそれを用意するところから&lt;br /&gt;
せっかくなのでこれも秋月で買ってきて組み立ててみました&lt;br /&gt;
といっても個別にパーツを揃えたわけでなく&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gK-08217/"&gt;ＰＡＭ８０１２使用２ワットＤ級アンプモジュール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gK-05363/"&gt;３．５ｍｍステレオミニジャックＤＩＰ化キット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gP-02679/"&gt;電池ボックス　単３×２本（リード線・耳付）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;100均で売っているスピーカ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらを接続しただけです&lt;br /&gt;
今回試した手順を以下にまとめておきます&lt;br /&gt;
後半は技術資料に書いてあるものそのままで、どちらかと言うと前半が僕には必要でした&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ArduinoのLSIを取り外し、AquesTalkを取り付け&lt;/li&gt;
&lt;li&gt;Arduinoの &lt;code&gt;デジタル6番&lt;/code&gt; をアンプの &lt;code&gt;IN+&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;Arduinoの &lt;code&gt;GND&lt;/code&gt; をアンプの &lt;code&gt;IN-&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;アンプの &lt;code&gt;+V&lt;/code&gt; と &lt;code&gt;GND&lt;/code&gt; をそれぞれ電池に接続&lt;/li&gt;
&lt;li&gt;アンプの &lt;code&gt;SPK+&lt;/code&gt; と &lt;code&gt;SPK-&lt;/code&gt; をジャックの &lt;code&gt;R&lt;/code&gt; と &lt;code&gt;G&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;ジャックにスピーカを接続&lt;/li&gt;
&lt;li&gt;ArduinoをPCに接続、Arduino IDEを起動&lt;/li&gt;
&lt;li&gt;メニューの &lt;code&gt;Tools -&amp;gt; Serial Monitor&lt;/code&gt; を開く&lt;/li&gt;
&lt;li&gt;右下のコンボボックスで &lt;code&gt;Carriage return&lt;/code&gt; と &lt;code&gt;9600bps&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;上のインプットボックスに &lt;code&gt;?&lt;/code&gt; を入力してEnter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;konnichiwa&lt;/code&gt; 等を入力してEnterを押すと発声する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;発声させるためのテキストは技術資料を参照するか、&lt;br /&gt;
&lt;a href="http://www.a-quest.com/demo/pico_kanji2roman.html"&gt;音声記号列生成 Webサービス&lt;/a&gt;を使用して作成します&lt;/p&gt;
&lt;p&gt;&lt;a href="/static/images/2014/07/IMAG1027.jpg"&gt;&lt;img alt="AquesTalk pico LSI" src="/static/images/2014/07/IMAG1027_s.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Mon, 21 Jul 2014 17:49:00 +0900</pubDate><guid>tag:,2014-07-21:posts/2014/07/aquestalk.html</guid><category>Arduino</category><category>AquesTalk pico LSI</category></item><item><title>PhantomJSを使ってみた</title><link>/posts/2014/07/phantomjs.html</link><description>&lt;p&gt;はじめて&lt;a href="http://phantomjs.org/"&gt;PhantomJS&lt;/a&gt;使ってみました&lt;br /&gt;
仕事で間接的に使ったことはありましたが、&lt;br /&gt;
プライベートで使ったのははじめてということでテストも兼ねて記事にしてみます&lt;/p&gt;
&lt;p&gt;なにに使ったかというと&lt;br /&gt;
ドメインの管理ページのDNSの設定の書き換えの自動化です&lt;br /&gt;
このサイトのドメインは&lt;a href="http://www.star-domain.jp/"&gt;スタードメイン&lt;/a&gt;で管理しているのですが、&lt;br /&gt;
ここはDDNSの機能は提供していないんですね&lt;br /&gt;
このサイトはCNAMEを固定で設定できればいいので特に必要はないんですが、&lt;br /&gt;
サブドメインを使って固定IPアドレスでない自宅のマシンにもアクセスできるようにしたかったのです&lt;br /&gt;
ただ手動では面倒なのでできれば何らかの方法で自動的に更新しようと考えました&lt;/p&gt;
&lt;p&gt;一般的には&lt;a href="http://www.mydns.jp/"&gt;MyDNS&lt;/a&gt;等の外部のDDNSの機能を提供しているサービスを使用して&lt;br /&gt;
このドメインで使用しているネームサーバをDDNSが提供しているものに変更するみたいです&lt;br /&gt;
一応この方法も試して動作することも確認しましたが、&lt;br /&gt;
PhantomJSを使って書き換える方法も比較的容易に実現できそうだったのでやってみました&lt;/p&gt;
&lt;p&gt;ソースは&lt;a href="https://github.com/lostman-github/stardomain-ddns"&gt;ここ&lt;/a&gt;に置いてあります&lt;br /&gt;
READMEにも書いてありますが実行方法は以下です&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;phantomjs stardomain-ddns.js &lt;span class="s2"&gt;&amp;quot;&amp;lt;email address&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;password&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;file name of DNS records&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;メールアドレスとパスワードはログインするために必要なもの&lt;br /&gt;
あとはDNSの設定が書いてあるファイルのファイル名を指定します&lt;br /&gt;
このファイルの中身はスタードメインの管理ページの&lt;br /&gt;
&lt;code&gt;レコード一括編集(テキストエリア)&lt;/code&gt; のページに表示される形式にしておきます&lt;br /&gt;
なので一度手動で設定しておいて、一括編集の画面からコピペしてファイルを作ると簡単です&lt;br /&gt;
スクリプトを実行すると現在の設定とファイルの中身が一致しなかった場合更新します&lt;/p&gt;
&lt;p&gt;このスクリプトを書くにあたってはまった部分がクリックの操作です&lt;br /&gt;
inputタグのボタンをクリックするには以下のようします&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;funcs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;action_user_dns_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;しかし、aタグのリンクをクリックしたい場合はうまくいきません (Firefoxでは上の書き方でも動作するんですよね&lt;br /&gt;
色々調べたら安心と信頼の&lt;a href="http://stackoverflow.com/questions/2705583/how-to-simulate-a-click-with-javascript/2706236#2706236"&gt;Stack Overflow&lt;/a&gt;に書いてあったのでそれを参考にしました&lt;br /&gt;
以下のようにするとクリックイベントを発生させることができました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;funcs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;submenu_04&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;firstElementChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Sun, 20 Jul 2014 03:30:00 +0900</pubDate><guid>tag:,2014-07-20:posts/2014/07/phantomjs.html</guid><category>JavaScript</category><category>PhantomJS</category></item><item><title>Pelicanはじめました</title><link>/posts/2014/07/pelican.html</link><description>&lt;p&gt;Bloggerでブログを書いていましたが順次こちらへ移行する予定&lt;br /&gt;
このページは&lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;に&lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;で生成したコンテンツを置いています&lt;br /&gt;
pipでpelicanとMarkdownをインストールするだけなので準備は簡単ですね&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">lostman/ごる</dc:creator><pubDate>Sun, 20 Jul 2014 00:10:00 +0900</pubDate><guid>tag:,2014-07-20:posts/2014/07/pelican.html</guid><category>Pelican</category></item></channel></rss>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog.gorugle.org</title><link href="/" rel="alternate"></link><link href="/feeds/lostmangoru.atom.xml" rel="self"></link><id>/</id><updated>2014-08-31T03:32:00+09:00</updated><entry><title>MySQL5.1から5.5へアップデート</title><link href="/posts/2014/08/mysql5.5.html" rel="alternate"></link><updated>2014-08-31T03:32:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-08-31:posts/2014/08/mysql5.5.html</id><summary type="html">&lt;p&gt;GentooからMySQL5.5がStableになったし5.1はmaskするよ、というお知らせが来ていました&lt;br /&gt;
epgrecとMediatombで使っているのですが5.5でも問題なさそうなのでアップデートしました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mysql_5_5_upgrade_procedures&lt;/span&gt;
  &lt;span class="n"&gt;Title&lt;/span&gt;                     &lt;span class="n"&gt;MySQL&lt;/span&gt; &lt;span class="mf"&gt;5.5&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;procedures&lt;/span&gt;
  &lt;span class="n"&gt;Author&lt;/span&gt;                    &lt;span class="n"&gt;Brian&lt;/span&gt; &lt;span class="n"&gt;Evans&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;grknight&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gentoo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;Posted&lt;/span&gt;                    &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
  &lt;span class="n"&gt;Revision&lt;/span&gt;                  &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;MySQL&lt;/span&gt; &lt;span class="mf"&gt;5.5&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;stable&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;arches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt;
&lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;rebuild&lt;/span&gt; &lt;span class="n"&gt;everything&lt;/span&gt; &lt;span class="n"&gt;linked&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;
&lt;span class="n"&gt;libmysqlclient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.16&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;libmysqlclient_r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;&lt;span class="mf"&gt;.16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;portage&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;emerge&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;preserved&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rebuild&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;libraries&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="n"&gt;rebuilt&lt;/span&gt; &lt;span class="n"&gt;against&lt;/span&gt;
&lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt; &lt;span class="n"&gt;libraries&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;preserved&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt;
&lt;span class="n"&gt;difficulties&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;packages&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;finding&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;libraries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;portage&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gentoolkit&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="cp"&gt;# revdep-rebuild --library libmysqlclient.so.16&lt;/span&gt;
&lt;span class="cp"&gt;# revdep-rebuild --library libmysqlclient_r.so.16&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;official&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;documentation&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;available&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nl"&gt;http:&lt;/span&gt;&lt;span class="c1"&gt;//dev.mysql.com/doc/refman/5.5/en/upgrading.html&lt;/span&gt;

&lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;possible&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;
&lt;span class="n"&gt;necessary&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;includes&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt;
&lt;span class="n"&gt;mysql_upgrade&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;completion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Due&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;security&lt;/span&gt; &lt;span class="n"&gt;flaws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MySQL&lt;/span&gt; &lt;span class="mf"&gt;5.1&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;hard&lt;/span&gt; &lt;span class="n"&gt;masked&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt; &lt;span class="n"&gt;days&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt;
&lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;news&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;posted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;remain&lt;/span&gt; &lt;span class="n"&gt;masked&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;months&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="n"&gt;removal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MySQLの停止&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/mysql stop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;emergeを使用してアップデート&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# emerge -uav mysql&lt;/span&gt;
&lt;span class="c"&gt;# etc-update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InnoDBが有効になっているとepgrecが遅くなるみたいなので設定を変更する &lt;a href="http://sarami.pv.s-labo.com/blog/zatta/?p=221"&gt;*&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt; に以下の二行を追加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;innodb&lt;/span&gt;
&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;MyISAM&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;関連パッケージの更新&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# emerge @preserved-rebuild -a&lt;/span&gt;
&lt;span class="c"&gt;# revdep-rebuild --library libmysqlclient.so.16&lt;/span&gt;
&lt;span class="c"&gt;# revdep-rebuild --library libmysqlclient_r.so.16&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQLを再起動&lt;br /&gt;
再起動すると &lt;code&gt;/var/log/mysql/mysqld.err&lt;/code&gt; に以下のようなエラーが出力されて&lt;br /&gt;
&lt;code&gt;mysql_upgrade&lt;/code&gt; を実行するように指示されます &lt;a href="http://server-setting.info/centos/mysql5-1_mysql5-5_upgrade.html"&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# /etc/init.d/mysql start&lt;/span&gt;
&lt;span class="c"&gt;# tail /var/log/mysql/mysqld.err&lt;/span&gt;
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Missing system table mysql.proxies_priv; please run mysql_upgrade to create it
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_current&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_history&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_history_long&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_consumers&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_instruments&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;setup_timers&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;performance_timers&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;threads&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_by_thread_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_by_instance&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;events_waits_summary_global_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_summary_by_event_name&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_summary_by_instance&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;mutex_instances&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;rwlock_instances&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;cond_instances&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;ERROR&lt;span class="o"&gt;]&lt;/span&gt; Native table &lt;span class="s1"&gt;&amp;#39;performance_schema&amp;#39;&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;file_instances&amp;#39;&lt;/span&gt; has the wrong structure
140830 20:53:41 &lt;span class="o"&gt;[&lt;/span&gt;Note&lt;span class="o"&gt;]&lt;/span&gt; Event Scheduler: Loaded 0 events
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DBの更新と再度MySQLを再起動&lt;br /&gt;
再起動後にログを確認してエラーがでていなければ完了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# mysql_upgrade -u root -p&lt;/span&gt;
&lt;span class="c"&gt;# /etc/init.d/mysql restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</summary><category term="MySQL"></category><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Nginxで自己署名証明書を使う</title><link href="/posts/2014/08/self-signed-certificate.html" rel="alternate"></link><updated>2014-08-16T02:42:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-08-16:posts/2014/08/self-signed-certificate.html</id><summary type="html">&lt;p&gt;ドメインを取ったのでそのうちきちんとした証明書を使おうかとは思っていますが&lt;br /&gt;
とりあえずしばらくはオレオレ証明書で運用しようと思っています&lt;br /&gt;
ということで作成の仕方をメモ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;パスフレーズなしの秘密鍵を作成&lt;br /&gt;
色々なサイトを見ていると一度パスフレーズありで作成してから&lt;br /&gt;
パスフレーズを削除したファイルを作りなおすような手順を踏んでいたりしますがこれでよさそう&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl genrsa -out server.key 2048&lt;/span&gt;
Generating RSA private key, 2048 bit long modulus
................................................+++
........................................+++
e is 65537 &lt;span class="o"&gt;(&lt;/span&gt;0x10001&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;公開鍵の作成&lt;br /&gt;
HTTPSで暗号化されていればいいだけなので &lt;code&gt;Common Name&lt;/code&gt; 以外は適当でいいです&lt;br /&gt;
&lt;code&gt;.&lt;/code&gt; を入力した場合そのフィールドは空になるみたいなので全て空にしました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl req -new -key server.key -out server.csr&lt;/span&gt;
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, the field will be left blank.
-----
Country Name &lt;span class="o"&gt;(&lt;/span&gt;2 letter code&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;AU&lt;span class="o"&gt;]&lt;/span&gt;:.
State or Province Name &lt;span class="o"&gt;(&lt;/span&gt;full name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Some-State&lt;span class="o"&gt;]&lt;/span&gt;:.
Locality Name &lt;span class="o"&gt;(&lt;/span&gt;eg, city&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:
Organization Name &lt;span class="o"&gt;(&lt;/span&gt;eg, company&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;Internet Widgits Pty Ltd&lt;span class="o"&gt;]&lt;/span&gt;:.
Organizational Unit Name &lt;span class="o"&gt;(&lt;/span&gt;eg, section&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:
Common Name &lt;span class="o"&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt;:&amp;lt;your domain name&amp;gt;
Email Address &lt;span class="o"&gt;[]&lt;/span&gt;:

Please enter the following &lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt; attributes
to be sent with your certificate request
A challenge password &lt;span class="o"&gt;[]&lt;/span&gt;:
An optional company name &lt;span class="o"&gt;[]&lt;/span&gt;:
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;証明書の作成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# openssl x509 -req -days 3650 -in server.csr -signkey server.key -out server.crt&lt;/span&gt;
Signature ok
&lt;span class="nv"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/CN&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;your domain name&amp;gt;
Getting Private key
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以上で証明書の準備はできたので &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; を編集して再起動すれば完了です&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
        listen 443 ssl;
        ssl_certificate     /path/to/certificate/server.crt;
        ssl_certificate_key /path/to/certificate/server.key;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Nginx"></category><category term="Linux"></category></entry><entry><title>MacUIM/Mozcを使う</title><link href="/posts/2014/08/macuim-mozc.html" rel="alternate"></link><updated>2014-08-02T02:04:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-08-02:posts/2014/08/macuim-mozc.html</id><summary type="html">&lt;p&gt;ターミナルは&lt;a href="http://software.schmorp.de/pkg/rxvt-unicode.html"&gt;rxvt-unicode&lt;/a&gt;をビルドして使用しています&lt;br /&gt;
これはX11のアプリなのでMacの標準のインプットメソッド経由では日本語を入力することができません&lt;br /&gt;
今までほとんど困ることはなくて、必要なときはコピペで対応していました&lt;br /&gt;
ただ最近ここをvimで書いていることもあり、&lt;a href="https://code.google.com/p/macuim/"&gt;MacUIM&lt;/a&gt;をインストールして入力できるようにしました&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;まず上記サイトからダウンロードしてきたアーカイブをインストールします&lt;/li&gt;
&lt;li&gt;次に &lt;code&gt;System Preferences -&amp;gt; Language &amp;amp; Text -&amp;gt; Input Sources&lt;/code&gt; で &lt;code&gt;MacUIM (Japanese)&lt;/code&gt; のチェックを入れる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;System Preferences -&amp;gt; MacUIM&lt;/code&gt; を開いて&lt;ol&gt;
&lt;li&gt;&lt;code&gt;General -&amp;gt; Input Method&lt;/code&gt; で &lt;code&gt;Mozc&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Helper -&amp;gt; Use Helper-Applet&lt;/code&gt; をチェック (メニューバーに状態が表示される)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Specify default IM&lt;/code&gt; をチェック&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Default input method&lt;/code&gt; で &lt;code&gt;Mozc&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;右下の &lt;code&gt;Apply&lt;/code&gt; ボタンを押す&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.xinitrc.d/uim-xim.sh&lt;/code&gt; に以下の内容で起動スクリプトを配置する&lt;br /&gt;
このファイルを追加することでX11の起動時にUIMが起動する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
/Library/Frameworks/UIM.framework/Versions/Current/bin/uim-xim &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt; にでも以下の環境変数を追加する&lt;br /&gt;
X11でurxvtしか使わないのであればこれでOK&lt;br /&gt;
他のアプリでも使用する場合は他からも見える位置で環境変数を定義する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;XMODIFIERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@im=uim&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uim&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;urxvtの起動時に &lt;code&gt;-pt OffTheSpot&lt;/code&gt; を追加する&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;とりあえずここまででデフォルトの &lt;code&gt;Shift+Space&lt;/code&gt; を使用すれば日本語入力ができるようになっているはず&lt;br /&gt;
ここからはおまけ&lt;br /&gt;
Input sourceはMacUIM固定で &lt;code&gt;Cmd+Space&lt;/code&gt; を日英の切り替えに使用したければ以下の設定をする&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;System Preferences -&amp;gt; Language &amp;amp; Text -&amp;gt; Input Sources&lt;/code&gt; を開いて&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Input source shortcuts&lt;/code&gt; にあるショートカットを無効にする&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Input source options&lt;/code&gt; は &lt;code&gt;Use the same one in all documents&lt;/code&gt; を選択&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.uim.d/customs/custom-mozc-keys.scm&lt;/code&gt; をエディタで開いて以下の部分を編集する&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;define&lt;/span&gt; &lt;span class="nf"&gt;mozc&lt;/span&gt;&lt;span class="na"&gt;-on-key&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;))&lt;/span&gt;
&lt;span class="s1"&gt;(define mozc-on-key? (make-key-predicate &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;define&lt;/span&gt; &lt;span class="nf"&gt;mozc&lt;/span&gt;&lt;span class="na"&gt;-off-key&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;))&lt;/span&gt;
&lt;span class="s1"&gt;(define mozc-off-key? (make-key-predicate &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;Meta&amp;gt; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;System Preferences -&amp;gt; MacUIM&lt;/code&gt; を開いて&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Global settings -&amp;gt; Enable input method toggle by hot key&lt;/code&gt; のチェックを外す&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Uim -&amp;gt; Mozc key bindings&lt;/code&gt; の &lt;code&gt;on&lt;/code&gt; と &lt;code&gt;off&lt;/code&gt; が &lt;code&gt;&amp;lt;Meta&amp;gt;space&lt;/code&gt; になっていることを確認&lt;/li&gt;
&lt;li&gt;右下の &lt;code&gt;Apply&lt;/code&gt; ボタンを押す&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上で &lt;code&gt;Cmd+Space&lt;/code&gt; の入力でネイティブでもX11でも日本語入力の切り替えをすることができるようになりました&lt;/p&gt;</summary><category term="Mac"></category><category term="MacUIM"></category><category term="Mozc"></category></entry><entry><title>AquesTalk pico LSIをI2Cで接続する</title><link href="/posts/2014/07/aquestalk-i2c.html" rel="alternate"></link><updated>2014-07-25T23:49:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-07-25:posts/2014/07/aquestalk-i2c.html</id><summary type="html">&lt;p&gt;ArduinoとAquesTalkをI2Cで接続してみました&lt;br /&gt;
配線は以下の通り  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pin&lt;/th&gt;
&lt;th&gt;AquesTalk&lt;/th&gt;
&lt;th&gt;-&amp;gt;&lt;/th&gt;
&lt;th&gt;Arduino&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;/RESET&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RESET&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;SMOD0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;SMOD1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;VCC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;VCC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;GND&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;SDA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;SCL&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;A5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;SMOD0&lt;/code&gt; と &lt;code&gt;SMOD1&lt;/code&gt; については技術資料の &lt;code&gt;表9.1 通信モード&lt;/code&gt; を参照&lt;br /&gt;
I2Cで接続するには &lt;code&gt;SMOD0 = 0&lt;/code&gt; 、 &lt;code&gt;SMOD1 = 1&lt;/code&gt; にする必要があります&lt;br /&gt;
あとは12番の &lt;code&gt;AOUT&lt;/code&gt; をアンプの &lt;code&gt;IN+&lt;/code&gt; 、 &lt;code&gt;GND&lt;/code&gt; を &lt;code&gt;IN-&lt;/code&gt; に接続します&lt;/p&gt;
&lt;p&gt;&lt;img alt="AquesTalk pico LSI I2C" src="/static/images/2014/07/IMAG1036.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;技術資料の &lt;code&gt;5. 基本回路&lt;/code&gt; にある回路図を見ると、これ以外に &lt;code&gt;VCC&lt;/code&gt; と &lt;code&gt;AOUT&lt;/code&gt; にコンデンサが追加されています&lt;br /&gt;
これはバイパスコンデンサというものらしく電源の安定化やノイズの発生を抑えたりする役割があるそうです &lt;a href="http://www.geocities.jp/zattouka/GarageHouse/micon/circuit/VoltREG.htm#pascon"&gt;*1&lt;/a&gt;&lt;br /&gt;
とりあえず、無しでも動きました(ぇ&lt;/p&gt;
&lt;p&gt;他に &lt;code&gt;9.2. I2C通信&lt;/code&gt; の部分を見ると &lt;code&gt;SDA&lt;/code&gt; 、 &lt;code&gt;SCL&lt;/code&gt; 共に &lt;code&gt;5KΩ&lt;/code&gt; 程度のプルアップ抵抗が必要とあります&lt;br /&gt;
プルアップ抵抗なんですが調べたところ標準の &lt;code&gt;Wire.h&lt;/code&gt; を使う場合Arduino内蔵の抵抗で問題なさそうなので &lt;a href="http://www.senio.co.jp/bbs/viewtopic.php?f=7&amp;amp;t=260"&gt;*2&lt;/a&gt; &lt;a href="http://myboom.mkch.net/modules/pukiwiki/180.html"&gt;*3&lt;/a&gt;&lt;br /&gt;
これも無しで試したところ、動きました&lt;/p&gt;
&lt;p&gt;というわけでAquesTalk以外に特に部品を追加することなく準備ができました&lt;br /&gt;
動作確認に使用したスケッチは&lt;a href="https://github.com/lostman-github/arduino/blob/master/Uno/AquesTalk/sample/sample.ino"&gt;GitHub&lt;/a&gt;にありますがここに貼り付けておきます &lt;a href="http://enajet.air-nifty.com/blog/2012/01/aquestalk-pico-.html"&gt;*4&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;Wire.h&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;#define PICO_I2C_ADDRESS 0x2E&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;isReady&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;beginTransmission&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PICO_I2C_ADDRESS&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;yukkurisiteittene&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endTransmission&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// send once&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;isReady&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;requestFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PICO_I2C_ADDRESS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Wire&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Arduino"></category><category term="AquesTalk pico LSI"></category></entry><entry><title>GitHub Pages関連で調べたこと</title><link href="/posts/2014/07/github-pages.html" rel="alternate"></link><updated>2014-07-24T00:16:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-07-24:posts/2014/07/github-pages.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/adding-a-cname-file-to-your-repository"&gt;Adding a CNAME file to your repository&lt;/a&gt;&lt;br /&gt;
  サブドメインを使用する場合はリポジトリに割り当てたいサブドメインを書いた &lt;code&gt;CNAME&lt;/code&gt; ファイルを追加するのと、&lt;br /&gt;
  使用しているDNSの設定でサブドメインと &lt;code&gt;hoge.github.io&lt;/code&gt; をCNAMEで関連付ける&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-submodules-with-pages"&gt;Using submodules with Pages&lt;/a&gt;&lt;br /&gt;
  gitのsubmoduleを使用する場合、リポジトリのURLは &lt;code&gt;git://&lt;/code&gt; でなく &lt;code&gt;https://&lt;/code&gt; を使用しなければいけない&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/using-jekyll-with-pages#turning-jekyll-off"&gt;Turning Jekyll off&lt;/a&gt;&lt;br /&gt;
  デフォルトでJekyllが有効になっているので &lt;code&gt;*.rst&lt;/code&gt; なファイルをアップロードすると変換しようとする&lt;br /&gt;
  これを無効にするために &lt;code&gt;.nojekyll&lt;/code&gt; をリポジトリのルートに作成する&lt;/li&gt;
&lt;/ul&gt;</summary><category term="GitHub"></category></entry><entry><title>AquesTalk pico LSIの動作確認</title><link href="/posts/2014/07/aquestalk.html" rel="alternate"></link><updated>2014-07-21T17:49:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-07-21:posts/2014/07/aquestalk.html</id><summary type="html">&lt;p&gt;以前購入していた&lt;a href="http://www.a-quest.com/products/aquestalkpicolsi.html"&gt;ATP3011F1-PU&lt;/a&gt;(&lt;a href="http://akizukidenshi.com/catalog/g/gI-06220/"&gt;秋月&lt;/a&gt;で850円)の動作確認をしてみました&lt;br /&gt;
紹介動画にもありますがArduino UNOに挿してアンプ付きのスピーカと接続、&lt;br /&gt;
PCからシリアルモニタで文字を送信するだけで音声を出すことができます&lt;br /&gt;
(技術資料 &lt;code&gt;13.4. Arduinoボードを利用した簡易動作&lt;/code&gt; を参照)&lt;br /&gt;
通常Arduinoから使う場合はI2C接続で使うことになると思いますが、&lt;br /&gt;
I2C接続は後日試すとして今回はこの方法で動作確認をしてみました&lt;/p&gt;
&lt;p&gt;まずうちにはアンプ付きのスピーカなんて無いのでそれを用意するところから&lt;br /&gt;
せっかくなのでこれも秋月で買ってきて組み立ててみました&lt;br /&gt;
といっても個別にパーツを揃えたわけでなく&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gK-08217/"&gt;ＰＡＭ８０１２使用２ワットＤ級アンプモジュール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gK-05363/"&gt;３．５ｍｍステレオミニジャックＤＩＰ化キット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://akizukidenshi.com/catalog/g/gP-02679/"&gt;電池ボックス　単３×２本（リード線・耳付）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;100均で売っているスピーカ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらを接続しただけです&lt;br /&gt;
今回試した手順を以下にまとめておきます&lt;br /&gt;
後半は技術資料に書いてあるものそのままで、どちらかと言うと前半が僕には必要でした&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ArduinoのLSIを取り外し、AquesTalkを取り付け&lt;/li&gt;
&lt;li&gt;Arduinoの &lt;code&gt;デジタル6番&lt;/code&gt; をアンプの &lt;code&gt;IN+&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;Arduinoの &lt;code&gt;GND&lt;/code&gt; をアンプの &lt;code&gt;IN-&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;アンプの &lt;code&gt;+V&lt;/code&gt; と &lt;code&gt;GND&lt;/code&gt; をそれぞれ電池に接続&lt;/li&gt;
&lt;li&gt;アンプの &lt;code&gt;SPK+&lt;/code&gt; と &lt;code&gt;SPK-&lt;/code&gt; をジャックの &lt;code&gt;R&lt;/code&gt; と &lt;code&gt;G&lt;/code&gt; に接続&lt;/li&gt;
&lt;li&gt;ジャックにスピーカを接続&lt;/li&gt;
&lt;li&gt;ArduinoをPCに接続、Arduino IDEを起動&lt;/li&gt;
&lt;li&gt;メニューの &lt;code&gt;Tools -&amp;gt; Serial Monitor&lt;/code&gt; を開く&lt;/li&gt;
&lt;li&gt;右下のコンボボックスで &lt;code&gt;Carriage return&lt;/code&gt; と &lt;code&gt;9600bps&lt;/code&gt; を選択&lt;/li&gt;
&lt;li&gt;上のインプットボックスに &lt;code&gt;?&lt;/code&gt; を入力してEnter&lt;/li&gt;
&lt;li&gt;&lt;code&gt;konnichiwa&lt;/code&gt; 等を入力してEnterを押すと発声する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;発声させるためのテキストは技術資料を参照するか、&lt;br /&gt;
&lt;a href="http://www.a-quest.com/demo/pico_kanji2roman.html"&gt;音声記号列生成 Webサービス&lt;/a&gt;を使用して作成します&lt;/p&gt;
&lt;p&gt;&lt;img alt="AquesTalk pico LSI" src="/static/images/2014/07/IMAG1027.jpg" /&gt;&lt;/p&gt;</summary><category term="Arduino"></category><category term="AquesTalk pico LSI"></category></entry><entry><title>PhantomJSを使ってみた</title><link href="/posts/2014/07/phantomjs.html" rel="alternate"></link><updated>2014-07-20T03:30:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-07-20:posts/2014/07/phantomjs.html</id><summary type="html">&lt;p&gt;はじめて&lt;a href="http://phantomjs.org/"&gt;PhantomJS&lt;/a&gt;使ってみました&lt;br /&gt;
仕事で間接的に使ったことはありましたが、&lt;br /&gt;
プライベートで使ったのははじめてということでテストも兼ねて記事にしてみます&lt;/p&gt;
&lt;p&gt;なにに使ったかというと&lt;br /&gt;
ドメインの管理ページのDNSの設定の書き換えの自動化です&lt;br /&gt;
このサイトのドメインは&lt;a href="http://www.star-domain.jp/"&gt;スタードメイン&lt;/a&gt;で管理しているのですが、&lt;br /&gt;
ここはDDNSの機能は提供していないんですね&lt;br /&gt;
このサイトはCNAMEを固定で設定できればいいので特に必要はないんですが、&lt;br /&gt;
サブドメインを使って固定IPアドレスでない自宅のマシンにもアクセスできるようにしたかったのです&lt;br /&gt;
ただ手動では面倒なのでできれば何らかの方法で自動的に更新しようと考えました&lt;/p&gt;
&lt;p&gt;一般的には&lt;a href="http://www.mydns.jp/"&gt;MyDNS&lt;/a&gt;等の外部のDDNSの機能を提供しているサービスを使用して&lt;br /&gt;
このドメインで使用しているネームサーバをDDNSが提供しているものに変更するみたいです&lt;br /&gt;
一応この方法も試して動作することも確認しましたが、&lt;br /&gt;
PhantomJSを使って書き換える方法も比較的容易に実現できそうだったのでやってみました&lt;/p&gt;
&lt;p&gt;ソースは&lt;a href="https://github.com/lostman-github/stardomain-ddns"&gt;ここ&lt;/a&gt;に置いてあります&lt;br /&gt;
READMEにも書いてありますが実行方法は以下です&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;phantomjs stardomain-ddns.js &lt;span class="s2"&gt;&amp;quot;&amp;lt;email address&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;password&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;file name of DNS records&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;メールアドレスとパスワードはログインするために必要なもの&lt;br /&gt;
あとはDNSの設定が書いてあるファイルのファイル名を指定します&lt;br /&gt;
このファイルの中身はスタードメインの管理ページの&lt;br /&gt;
&lt;code&gt;レコード一括編集(テキストエリア)&lt;/code&gt; のページに表示される形式にしておきます&lt;br /&gt;
なので一度手動で設定しておいて、一括編集の画面からコピペしてファイルを作ると簡単です&lt;br /&gt;
スクリプトを実行すると現在の設定とファイルの中身が一致しなかった場合更新します&lt;/p&gt;
&lt;p&gt;このスクリプトを書くにあたってはまった部分がクリックの操作です&lt;br /&gt;
inputタグのボタンをクリックするには以下のようします&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;funcs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;action_user_dns_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;しかし、aタグのリンクをクリックしたい場合はうまくいきません (Firefoxでは上の書き方でも動作するんですよね&lt;br /&gt;
色々調べたら安心と信頼の&lt;a href="http://stackoverflow.com/questions/2705583/how-to-simulate-a-click-with-javascript/2706236#2706236"&gt;Stack Overflow&lt;/a&gt;に書いてあったのでそれを参考にしました&lt;br /&gt;
以下のようにするとクリックイベントを発生させることができました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;funcs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;elem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;submenu_04&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;firstElementChild&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dispatchEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="JavaScript"></category><category term="PhantomJS"></category></entry><entry><title>Pelicanはじめました</title><link href="/posts/2014/07/pelican.html" rel="alternate"></link><updated>2014-07-20T00:10:00+09:00</updated><author><name>lostman/ごる</name></author><id>tag:,2014-07-20:posts/2014/07/pelican.html</id><summary type="html">&lt;p&gt;Bloggerでブログを書いていましたが順次こちらへ移行する予定&lt;br /&gt;
このページは&lt;a href="https://pages.github.com/"&gt;Github Pages&lt;/a&gt;に&lt;a href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;で生成したコンテンツを置いています&lt;/p&gt;</summary><category term="Pelican"></category></entry></feed>